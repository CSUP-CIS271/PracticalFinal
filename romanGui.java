/*Author:	Daniel Baliczek
Date: 4/29
File: romanGui.java
desc: A Gui to RomanNumConverter.java, requires romanGui.class, romanGui$1.class, and romanGui$2.class to run
*/
import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JButton;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
public class romanGui{
	private JFrame frame;
	private JTextField textField;
	private JLabel label;
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					romanGui window = new romanGui();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	public romanGui() {
		initialize();
	}
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 450, 220);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		textField = new JTextField();
		textField.setBounds(34, 42, 362, 20);
		frame.getContentPane().add(textField);
		textField.setColumns(10);
		JLabel lblRomanNumeral = new JLabel("Enter Roman Numeral from 1 to 3999:");
		lblRomanNumeral.setBounds(34, 11, 362, 20);
		frame.getContentPane().add(lblRomanNumeral);
		label = new JLabel("");
		label.setBounds(34, 107, 362, 62);
		frame.getContentPane().add(label);
		JButton btnNewButton = new JButton("Convert!");
		btnNewButton.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e) {
				if(textField.getText().isEmpty()){
					label.setText("The field is blank. Try again.");
				}else{
					String tmp = textField.getText();
					try {
						if(!chkSyntax(tmp)){
							label.setText("Your Syntax is invalid. Please recheck your syntax.");
						}else{
							tmp = Integer.toString(RomanNumConverter.con(tmp));
							label.setText(tmp);
						}
					} catch (FileNotFoundException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				}
			}
		});
		;
		btnNewButton.setBounds(34, 73, 362, 23);
		frame.getContentPane().add(btnNewButton);
	}
	private static boolean chkSyntax(String input) throws FileNotFoundException{
		//List autoGenerated using excel
		//upper limit of 3999 because that is the highest possible value that can be written using correct syntax and regular characters
		Scanner chk = new Scanner(new File("roman2.txt"));
		boolean syntax = false;
		String[] tmp = chk.nextLine().split(", ");
		for(String a : tmp){
			if (a.equals(input.toUpperCase())){
				syntax = true;
				break;
			}
		}
		chk.close();
		return syntax;
	}
}
